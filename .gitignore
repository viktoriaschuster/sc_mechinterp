# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# Environment isolation files
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/
sc_mechinterp_env/
requirements-frozen.txt

# Docker
.dockerignore
docker-compose.override.yml
.docker/

# Poetry
poetry.lock

# Conda
environment-minimal.yml
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/
sc_mechinterp_env/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# sc_mechinterp specific

# Data files (large files, downloaded separately)
examples/*/go-basic.obo
examples/*/goa_*.gaf
examples/*/*.gaf.gz
examples/*/custom_gene_sets/

# Results and output directories (temporary files from examples/testing)
results/
example_results/
example_*_results/
test_*output/
my_results/
*_output/
*_results/

# Example and test data (temporary files created during testing)
example_data/
test_data/
temp_data/
**/example_data/
**/example_results/
**/example_*_results/
**/test_*output/
**/temp_*/
old_code/

# Generated model and data files
*.pt
*.pth
*.npy
*.h5ad
*.csv.gz

# Logs
*.log
logs/
.logs/

# Model files and checkpoints
*.model
*.checkpoint
*.ckpt
*.pth
models/
checkpoints/

# IDE specific files
.vscode/
.idea/
*.swp
*.swo
*~

# macOS
.DS_Store

# Windows
Thumbs.db
ehthumbs.db
Desktop.ini

# Linux
*~

# Temporary files
tmp/
temp/
.tmp/
.temp/

# Cache directories
.cache/
cache/

# Reorganization and development files
REORGANIZATION_COMPLETE.md
agent.md
COMPLETION_SUMMARY.md
DEVELOPMENT_CHECKLIST.md
PROJECT_STATUS.md

# Conda environments
environment-*.yml
!environment.yml

# Poetry
poetry.lock

# Pre-commit
.pre-commit-config.yaml

# Backup files
*.bak
*.backup
*_backup

# Large model/data files (use Git LFS if needed)
*.bin
*.safetensors

# Jupyter outputs (if notebooks are included)
**/outputs/
